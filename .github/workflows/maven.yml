# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build pipeline

# Trigegr the pipeline on?
on:
  push:
    # Sequence of patterns matched against refs/heads
    branches-ignore:
      - 'releases/**'
  pull_request:
    branches: [ "main" ]

# Jobs to be run
jobs:

  # 1. Build the artifact with Maven
  build-maven:

    runs-on: ubuntu-latest
    outputs:
      build_id: ${{ github.run_number }}
      sha_short: ${{ steps.env-setup.outputs.sha_short }}

    steps:
    - uses: actions/checkout@v4
    - name: Preparing build environment
      id: env-setup
      shell: bash
      run: |
        echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
        echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_OUTPUT"
        echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_ENV"
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        architecture: x64
        cache: maven-build
    - name: Build with Maven
      run: mvn -B -DskipTests=true package --file pom.xml
    - uses: actions/upload-artifact@v4
      with:
        name: Package
        path: staging

  # 2. Build the container images with Docker
  build-container:

    runs-on: ubuntu-latest
    needs: [ "build-maven" ]
    outputs:
      image_sha: ${{ env.image_sha }}

    steps:
    - name: Build and push the Docker image
      run: |
        TAG_NAME=${{ needs.build-maven.outputs.sha_short }}-${{ github.run_number }}
        docker login quay.io --username ${{ secrets.QUAY_USERNAME }} --password ${{ secrets.QUAY_TOKEN }}
        docker build . --file src/container/Containerfile --platform linux/amd64 --tag quay.io/rh_rh/todo-java:$TAG_NAME
        docker push quay.io/rh_rh/todo-java:$TAG_NAME
        docker image tag quay.io/rh_rh/todo-java:$TAG_NAME quay.io/rh_rh/todo-java:latest
        docker push quay.io/rh_rh/todo-java:latest
        echo "image_sha=$(docker images --no-trunc --quiet quay.io/rh_rh/todo-java:latest)" >> "$GITHUB_ENV"
